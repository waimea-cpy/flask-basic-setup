{#
    About page
    - Information about Flask
    - Information about Jinja
#}

{% extends 'pages/base.jinja' %}


{% block title %} About Flask and Jinja {% endblock %}


{% block content %}

    <section id="info">

        <article>

            <header>
                <h1>What is Flask?</h1>
            </header>

            <figure>
                <img src="/static/images/flask.webp" alt="Flask Logo">

                <figcaption>The Flask logo</figcaption>
            </figure>

            <p>Flask is a <strong>web back-end application framework</strong>. It is written in the <strong>Python</strong> programming language and provides features such as:</p>

            <ul>
                <li>Handling HTTP requests: GET, POST, PUT, DELETE</li>
                <li>URL routing, allowing the use of simple and meaningful URLs</li>
                <li>Serving of static files (e.g. CSS, images, etc.)</li>
                <li>Templating via Jinja2 templates</li>
            </ul>

            <p>Flask also supports extensions that can add application features, such as form validation, upload handling, authentication, etc.</p>

            <p>Flask was created in 2010, and since then has been regularly voted the most popular web framework in the Python Developers Survey. Applications that use the Flask framework include Pinterest and LinkedIn.</p>

            <footer>
                <p>Find out more about <a href="https://flask.palletsprojects.com/en/stable/">Flask</a></p>
            </footer>

        </article>


        <article>

            <header>
                <h1>What is Jinja?</h1>
            </header>

            <figure>
                <img src="/static/images/jinja.png" alt="Flask Logo">

                <figcaption>The Jinja logo</figcaption>
            </figure>

            <p>Jinja is a <strong>templating engine</strong>. Special placeholders in the template allow data to be passed into the template and programmatic operations (e.g. conditions, loops, etc.) using a syntax similar to Python.</p>

            <p>Jinja allow for things like:</p>

            <ul>
                <li>Customisation of HTML tags</li>
                <li>Conditional page sections (e.g. based on if the user is logged in)</li>
                <li>Looping over data items (e.g. data retrieved from a database)</li>
            </ul>

            <p>Jinja was created by the same team behind Flask, so integrates very well. It is the default template engine for Flask.</p>

            <footer>
                <p>Find out more about <a href="https://jinja.palletsprojects.com/en/stable/">Jinja</a></p>
            </footer>

        </article>

    </section>

{% endblock %}

